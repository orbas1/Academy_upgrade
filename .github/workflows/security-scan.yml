name: Security Quality Gate

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'Academy/Web_Application/Academy-LMS/**'
      - 'Academy/Student Mobile APP/academy_lms_app/**'
      - 'Academy/tools/security/**'
      - '.github/workflows/security-scan.yml'
  schedule:
    - cron: '0 5 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Review dependencies
        uses: actions/dependency-review-action@v4
        with:
          config-file: .github/dependency-review-config.yml
          fail-on-severity: high

  php-security:
    name: PHP SAST & SCA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo_mysql
          coverage: none
      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: Academy/Web_Application/Academy-LMS/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('Academy/Web_Application/Academy-LMS/composer.lock') }}
      - name: Install Composer dependencies
        env:
          APP_ENV: testing
          APP_KEY: base64:FAKEKEYFORSECURITYSCANS1234567890ABCD==
        run: composer install --no-interaction --no-progress --prefer-dist --no-scripts
        working-directory: Academy/Web_Application/Academy-LMS
      - name: Composer audit
        run: composer audit --locked
        working-directory: Academy/Web_Application/Academy-LMS
      - name: Larastan static analysis
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon.dist --memory-limit=1G
        working-directory: Academy/Web_Application/Academy-LMS

  node-audit:
    name: Frontend Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Academy/Web_Application/Academy-LMS/package-lock.json
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit
        working-directory: Academy/Web_Application/Academy-LMS
      - name: npm audit (production)
        run: npm audit --omit=dev --audit-level=high
        working-directory: Academy/Web_Application/Academy-LMS

  flutter-audit:
    name: Flutter Dependency Review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Flutter pub get
        run: flutter pub get
        working-directory: "Academy/Student Mobile APP/academy_lms_app"
      - name: Flutter dependency report
        run: flutter pub outdated --mode=null-safety
        working-directory: "Academy/Student Mobile APP/academy_lms_app"

  tooling-smoke-test:
    name: Security Toolkit Smoke Test
    runs-on: ubuntu-latest
    needs:
      - php-security
      - node-audit
      - flutter-audit
    steps:
      - uses: actions/checkout@v4
      - name: Run consolidated security scan script
        run: |
          chmod +x Academy/tools/security/security_scan.sh
          Academy/tools/security/security_scan.sh

  owasp-zap:
    name: OWASP ZAP Baseline DAST
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && secrets.ZAP_BASELINE_TARGET != '' }}
    steps:
      - uses: actions/checkout@v4
      - name: Pull OWASP ZAP baseline container
        run: docker pull ghcr.io/zaproxy/zaproxy:stable
      - name: Execute OWASP ZAP baseline scan
        env:
          ZAP_BASELINE_TARGET: ${{ secrets.ZAP_BASELINE_TARGET }}
          ZAP_AUTH_HEADER: ${{ secrets.ZAP_AUTH_HEADER }}
          ZAP_AUTH_HEADER_VALUE: ${{ secrets.ZAP_AUTH_HEADER_VALUE }}
          ZAP_AUTH_HEADER_SITE: ${{ secrets.ZAP_AUTH_HEADER_SITE }}
          ZAP_MAX_DURATION: 10
          ZAP_TIMEOUT: 120
        run: |
          chmod +x Academy/tools/security/zap/run_baseline.sh
          mkdir -p zap-artifacts
          ZAP_OUTPUT_DIR="$PWD/zap-artifacts" Academy/tools/security/zap/run_baseline.sh "$ZAP_BASELINE_TARGET"
      - name: Summarise OWASP ZAP results
        run: |
          python3 Academy/tools/security/zap/summarize_zap.py \
            --input "zap-artifacts/zap-report.json" \
            --output "zap-artifacts/zap-summary.json" \
            --markdown "zap-artifacts/zap-summary.md"
      - name: Upload ZAP artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-report
          path: zap-artifacts
          retention-days: 45


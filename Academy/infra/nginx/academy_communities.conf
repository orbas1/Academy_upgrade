# Academy Communities Production Virtual Host
# Hardened Nginx configuration with CDN awareness, WAF integration, and rate controls.

# Upgrade websocket connections cleanly.
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Throttle abusive clients hitting the API surface.
limit_req_zone $binary_remote_addr zone=api_throttle:10m rate=25r/s;
limit_conn_zone $binary_remote_addr zone=per_ip:10m;

# Compression & modern transport tuning.
gzip on;
gzip_comp_level 5;
gzip_min_length 256;
gzip_proxied any;
gzip_types text/plain text/css text/javascript application/javascript application/json application/xml+rss font/woff2 image/svg+xml;
gzip_vary on;

# Serve pre-compressed assets when available and fall back to dynamic brotli.
brotli on;
brotli_comp_level 5;
brotli_static on;
brotli_types text/plain text/css text/javascript application/javascript application/json application/xml+rss font/woff2 image/svg+xml;

# Application upstreams
upstream backend_app {
    server unix:/run/php/php8.3-fpm.sock; # Laravel PHP-FPM socket
    keepalive 16;
}

upstream websocket_backend {
    server 127.0.0.1:6001; # Laravel WebSockets or Pusher compatible relay
    keepalive 16;
}

server {
    listen 443 ssl http2;
    server_name communities.academy.example;

    # TLS hardening (cert paths managed by automation such as certbot/ACM).
    ssl_certificate     /etc/letsencrypt/live/communities.academy.example/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/communities.academy.example/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256';
    ssl_session_cache   shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_stapling        on;
    ssl_stapling_verify on;

    # Ingest real IP headers from CloudFront/Load Balancer/Edge POPs.
    set_real_ip_from 10.0.0.0/16;     # VPC internal load balancers
    set_real_ip_from 192.168.0.0/16;  # Private networking
    set_real_ip_from 13.32.0.0/15;    # CloudFront edge
    set_real_ip_from 52.46.0.0/18;    # CloudFront edge
    real_ip_header X-Forwarded-For;

    # Enterprise logging format (JSON) consumed by ELK/Splunk.
    access_log /var/log/nginx/communities.access.log json_combined;
    error_log  /var/log/nginx/communities.error.log  warn;

    # Enforce security headers & CSP alignment with Laravel middleware.
    include snippets/security-headers.conf;

    # Web application firewall (OWASP CRS via ModSecurity v3).
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsecurity/main.conf;

    # Drop unsupported verbs early.
    if ($request_method !~ ^(GET|POST|PUT|PATCH|DELETE|OPTIONS)$) {
        return 405;
    }

    # Health check used by load balancers.
    location = /_status {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"ok"}';
    }

    # Static and compiled assets cached aggressively (fronted by CDN).
    location ~* \.(?:css|js|mjs|woff2?|ttf|eot|png|jpe?g|gif|ico|svg|webp|avif)$ {
        expires 365d;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Vary "Accept-Encoding";
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Public community landing pages leverage short-lived SWR caching to keep content hot.
    location ^~ /communities/ {
        add_header Cache-Control "public, max-age=60, s-maxage=120, stale-while-revalidate=120, stale-if-error=600";
        add_header Surrogate-Control "stale-while-revalidate=120, stale-if-error=600";
        proxy_cache_bypass $http_cache_control;
        proxy_no_cache $http_cache_control;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Media served via S3+CloudFront origin shield.
    location /storage/ {
        expires 12h;
        add_header Cache-Control "public, max-age=43200, s-maxage=86400, stale-if-error=86400";
        proxy_pass https://media-cdn.academy.example$request_uri;
        proxy_set_header Host media-cdn.academy.example;
        proxy_set_header X-Forwarded-Proto https;
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
    }

    # REST API with rate limiting and observability headers.
    location /api/ {
        limit_req zone=api_throttle burst=30 nodelay;
        limit_conn per_ip 30;

        proxy_pass http://backend_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Request-Id $request_id;
        proxy_set_header Connection "";
        proxy_read_timeout 60s;
    }

    # Authenticated broadcasting for presence channels.
    location /broadcasting/auth {
        proxy_pass http://backend_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Request-Id $request_id;
    }

    # WebSocket fan-out for realtime feed updates.
    location /ws/ {
        proxy_pass http://websocket_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 60s;
    }

    # Default Laravel front controller routing.
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass backend_app;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param APP_ENV production;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_read_timeout 120s;
    }

    # Guard dot files & git metadata.
    location ~ /\.(?!well-known) {
        deny all;
    }
}

server {
    listen 80;
    server_name communities.academy.example;
    return 301 https://$host$request_uri;
}
